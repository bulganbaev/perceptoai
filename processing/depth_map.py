import cv2
import numpy as np
import os
import hailo_platform as hp


class DepthEstimator:
    def __init__(self, calib_path="data/calibration/calibration_data.npz", use_hailo=True,
                 hef_path="data/models/stereonet.hef"):
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏
        calib_data = np.load(calib_path)
        self.mtxL, self.distL = calib_data["mtxL"], calib_data["distL"]
        self.mtxR, self.distR = calib_data["mtxR"], calib_data["distR"]
        self.R, self.T = calib_data["R"], calib_data["T"]

        # –í—ã—á–∏—Å–ª—è–µ–º baseline (—Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∫–∞–º–µ—Ä–∞–º–∏)
        self.baseline = np.linalg.norm(self.T)

        self.use_hailo = use_hailo
        if use_hailo:
            self.device = hp.Device()
            self.hef = hp.HEF(hef_path)
            self.network_group = self.device.configure(self.hef)
            print("‚úÖ Hailo-8 —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω. –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞.")
            print("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ç–∏:")
            print(self.network_group.get_network_info())
        else:
            # –°–æ–∑–¥–∞–µ–º SGBM —Å—Ç–µ—Ä–µ–æ-–ø–∞—Ä—É
            self.stereo = cv2.StereoSGBM_create(
                minDisparity=0,
                numDisparities=96,  # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫—Ä–∞—Ç–Ω–æ 16
                blockSize=9,
                P1=8 * 3 * 9 ** 2,
                P2=32 * 3 * 9 ** 2,
                disp12MaxDiff=1,
                uniquenessRatio=15,
                speckleWindowSize=100,
                speckleRange=32
            )


if __name__ == "__main__":
    depth_estimator = DepthEstimator(use_hailo=True)  # –í–∫–ª—é—á–∞–µ–º Hailo-8
    print("üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –º–æ–¥–µ–ª–∏ –Ω–∞ Hailo-8...")
